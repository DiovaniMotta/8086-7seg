 ;           FUNDACAO UNIVERSITARIA REGIONAL DE BLUMENAU  - FURB
 ;               DISCIPLINA: ARQUITETURA DE COMPUTADORES II
;                             SEMESTRE: 2016/2
;      ACADEMICOS: DIOVANI BERNARDI DA MOTTA E GABRIEL DOS SANTOS RAITHZ
 
.MODEL	SMALL

IO0  EQU  0000H
IO1  EQU  0200H
IO2  EQU  0400H
IO3  EQU  0600H
IO4  EQU  0800H
IO5  EQU  0A00H
IO6  EQU  0C00H
IO7  EQU  0E00H
IO8  EQU  1000H
IO9  EQU  1200H
IO10 EQU  1400H
IO11 EQU  1600H
IO12 EQU  1800H
IO13 EQU  1A00H
IO14 EQU  1C00H
IO15 EQU  1E00H

; 8251A USART 
ADR_USART_DATA EQU  (IO6 + 00H)
;ONDE VOCE VAI MANDAR E RECEBER DADOS DO 8251

ADR_USART_CMD  EQU  (IO6 + 02H)
;É O LOCAL ONDE VOCE VAI ESCREVER PARA PROGRAMAR O 8251

ADR_USART_STAT EQU  (IO6 + 02H)
;RETORNA O STATUS SE UM CARACTER FOI DIGITADO
;RETORNA O STATUS SE POSSO TRANSMITIR CARACTER PARA O TERMINAL

; VALORES QUE SERÃO EXIBIDOS NO DISPLAY
ZERO = 10111111B 
ONE = 10000110B 
TWO = 11011011B 
THREE = 11001111B 
FOUR = 11100110B 
FIVE = 11101101B 
SIX = 11111101B 
SEVEN = 10000111B 
EIGHT = 11111111B 
NINE = 11101111B 


.8086
.CODE
   ;ASSUME    CS:CODE,DS:DATA
   ORG 0008H
   PONTEIRO_TRATADOR_INTERRUPCAO DB 4 DUP(?) ; PONTEIRO PARA INTERRUPCAO
   ;APONTA PARA UMA ROTINA CHAMADA A CADA 1 SEGUNDO VIA HARDWARE INTERRUPT
   ;OBSERVE NO 8086 O PINO NMI, ELE ESTA RECEBENDO UM PULSO A CADA UM SEGUNDO, FORÇANDO A INTERRUPÇÃO

   ;RESERVADO PARA VETOR DE INTERRUPCOES
   ORG 0400H
	  
INICIO:
    MOV AX,@DATA
    MOV DS,AX
    MOV AX,@STACK
    MOV SS,AX

ZERA:
    MOV DX, IO0
    MOV AL, ZERO
    OUT DX, AL
    
    MOV DX, IO1
    MOV AL, ONE
    OUT DX, AL
    
    MOV DX, IO2
    MOV AL, TWO
    OUT DX, AL
    
    MOV DX, IO3
    MOV AL, THREE
    OUT DX, AL
    
    MOV DX, IO4
    MOV AL, FOUR
    OUT DX, AL
    
    MOV DX, IO5
    MOV AL, FIVE
    OUT DX, AL
    
    JMP SEG_UNI_SHOW

SEG_UNI_PLUS:
   JMP SEG_UNI_PLUS
    
ZERA_SEG_UNI:
    MOV SEG_UNI,30H
    INC SEG_DEZ
    JMP SEG_DEZ_SHOW
ZERA_SEG_DEZ:
    MOV SEG_DEZ,30H
    INC MIN_UNI
    JMP MIN_UNI_SHOW
ZERA_MIN_UNI:
    MOV MIN_UNI,30H
    INC MIN_DEZ
    JMP MIN_DEZ_SHOW
ZERA_MIN_DEZ:
    MOV MIN_DEZ,30H
    INC HOR_UNI
    JMP HOR_UNI_SHOW
ZERA_HOR_UNI:
    MOV HOR_UNI,30H
    INC HOR_DEZ
    JMP HOR_DEZ_SHOW 
ZERA_HOR_DEZ:
    MOV HOR_DEZ,30H
     MOV HOR_UNI,30H
     MOV MIN_DEZ,30H
     MOV MIN_UNI,30H
     MOV SEG_DEZ,30H
     MOV SEG_UNI,30H
     JMP ZERA

;VERIFICANDO QUE NÚMERO DA UNIDADE DOS SEGUNDOS DEVE SER EXIBIDA
SEG_UNI_SHOW:
     CMP SEG_UNI, 30H
     JE SEG_UNI_0
     CMP SEG_UNI, 31H 
     JE SEG_UNI_1
     CMP SEG_UNI, 32H 
     JE SEG_UNI_2
     CMP SEG_UNI, 33H 
     JE SEG_UNI_3
     CMP SEG_UNI, 34H
     JE SEG_UNI_4
     CMP SEG_UNI, 35H 
     JE SEG_UNI_5
     CMP SEG_UNI, 36H 
     JE SEG_UNI_6
     CMP SEG_UNI, 37H 
     JE SEG_UNI_7
     CMP SEG_UNI, 38H 
     JE SEG_UNI_8
     CMP SEG_UNI, 39H
     JE SEG_UNI_9

;VERIFICANDO QUE NÚMERO DA DEZENA DOS SEGUNDOS DEVE SER EXIBIDA	
SEG_DEZ_SHOW:
     CMP SEG_DEZ, 30H
     JE SEG_DEZ_0
     CMP SEG_DEZ, 31H 
     JE SEG_DEZ_1
     CMP SEG_DEZ, 32H 
     JE SEG_DEZ_2
     CMP SEG_DEZ, 33H 
     JE SEG_DEZ_3
     CMP SEG_DEZ, 34H
     JE SEG_DEZ_4
     CMP SEG_DEZ, 35H 
     JE SEG_DEZ_5
     CMP SEG_DEZ, 36H
     JE SEG_DEZ_6

;VERIFICANDO QUE NÚMERO DA UNIDADE DOS MINUTOS DEVE SER EXIBIDA
MIN_UNI_SHOW:
     CMP MIN_UNI, 30H
     JE MIN_UNI_0
     CMP MIN_UNI, 31H 
     JE MIN_UNI_1
     CMP MIN_UNI, 32H 
     JE MIN_UNI_2
     CMP MIN_UNI, 33H 
     JE MIN_UNI_3
     CMP MIN_UNI, 34H
     JE MIN_UNI_4
     CMP MIN_UNI, 35H 
     JE MIN_UNI_5
     CMP MIN_UNI, 36H 
     JE MIN_UNI_6
     CMP MIN_UNI, 37H 
     JE MIN_UNI_7
     CMP MIN_UNI, 38H 
     JE MIN_UNI_8
     CMP MIN_UNI, 39H
     JE MIN_UNI_9

;VERIFICANDO QUE NÚMERO DA DEZENA DOS MINUTOS DEVE SER EXIBIDA	
MIN_DEZ_SHOW:
     CMP MIN_DEZ, 30H
     JE MIN_DEZ_0
     CMP MIN_DEZ, 31H 
     JE MIN_DEZ_1
     CMP MIN_DEZ, 32H 
     JE MIN_DEZ_2
     CMP MIN_DEZ, 33H 
     JE MIN_DEZ_3
     CMP MIN_DEZ, 34H
     JE MIN_DEZ_4
     CMP MIN_DEZ, 35H 
     JE MIN_DEZ_5
     CMP MIN_DEZ, 36H
     JE MIN_DEZ_6

;VERIFICANDO QUE NÚMERO DA UNIDADE DAS HORAS DEVE SER EXIBIDA
HOR_UNI_SHOW:
     CMP HOR_UNI, 30H
     JE HOR_UNI_0
     CMP HOR_UNI, 31H 
     JE HOR_UNI_1
     CMP HOR_UNI, 32H 
     JE HOR_UNI_2
     CMP HOR_UNI, 33H 
     JE HOR_UNI_3
     CMP HOR_UNI, 34H
     JE HOR_UNI_4
     CMP HOR_UNI, 35H 
     JE HOR_UNI_5
     CMP HOR_UNI, 36H 
     JE HOR_UNI_6
     CMP HOR_UNI, 37H 
     JE HOR_UNI_7
     CMP HOR_UNI, 38H 
     JE HOR_UNI_8
     CMP HOR_UNI, 39H
     JE HOR_UNI_9

;VERIFICANDO QUE NÚMERO DA DEZENA DAS HORAS DEVE SER EXIBIDA
HOR_DEZ_SHOW:
     CMP HOR_DEZ, 30H
     JE HOR_DEZ_0
     CMP HOR_DEZ, 31H 
     JE HOR_DEZ_1
     CMP HOR_DEZ, 32H 
     JE HOR_DEZ_2
     CMP HOR_DEZ, 33H 
     JE HOR_DEZ_3
     CMP HOR_DEZ, 34H
     JE HOR_DEZ_4
     CMP HOR_DEZ, 35H 
     JE HOR_DEZ_5
     CMP HOR_DEZ, 36H
     JE HOR_DEZ_6
    
;MOSTRANDO DÍGITOS DA UNIDADE DOS SEGUNDOS 0-9 
SEG_UNI_0:
     MOV DX, IO0
     MOV AL, ZERO
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_1:
     MOV DX, IO0
     MOV AL, ONE
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_2:
     MOV DX, IO0
     MOV AL, TWO
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_3:
     MOV DX, IO0
     MOV AL, THREE
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_4:
     MOV DX, IO0
     MOV AL, FOUR
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_5:
     MOV DX, IO0
     MOV AL, FIVE
     OUT DX, AL
     JMP SEG_UNI_PLUS
SEG_UNI_6:
      MOV DX, IO0
      MOV AL, SIX
      OUT DX, AL
      JMP SEG_UNI_PLUS
SEG_UNI_7:
      MOV DX, IO0
      MOV AL, SEVEN
      OUT DX, AL
      JMP SEG_UNI_PLUS
SEG_UNI_8:
      MOV DX, IO0
      MOV AL, EIGHT
      OUT DX, AL
      JMP SEG_UNI_PLUS
SEG_UNI_9:
       MOV DX, IO0
       MOV AL, NINE
       OUT DX, AL
       JMP SEG_UNI_PLUS

;MOSTRANDO DÍGITOS DA DEZENA DOS SEGUNDOS 0-6
SEG_DEZ_0:
       MOV DX, IO1
       MOV AL, ZERO
       OUT DX, AL
       JMP SEG_UNI_SHOW
SEG_DEZ_1:
	MOV DX, IO1
	MOV AL, ONE
	OUT DX, AL
	JMP SEG_UNI_SHOW
SEG_DEZ_2:
	MOV DX, IO1
	MOV AL, TWO
	OUT DX, AL
        JMP SEG_UNI_SHOW
SEG_DEZ_3:
	MOV DX, IO1
	MOV AL, THREE
	OUT DX, AL
	JMP SEG_UNI_SHOW
SEG_DEZ_4:
	MOV DX, IO1
	MOV AL, FOUR
	OUT DX, AL
	JMP SEG_UNI_SHOW
SEG_DEZ_5:
	MOV DX, IO1
	MOV AL, FIVE
	OUT DX, AL
	JMP SEG_UNI_SHOW
SEG_DEZ_6:
	MOV DX, IO1
	MOV AL, SIX
	OUT DX, AL
	JMP SEG_UNI_SHOW

;MOSTRANDO DÍGITOS DA UNIDADE DOS MINUTOS 0-9 
MIN_UNI_0:
	MOV DX, IO2
	MOV AL, ZERO
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_1:
	MOV DX, IO2
	MOV AL, ONE
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_2:
	MOV DX, IO2
	MOV AL, TWO
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_3:
	MOV DX, IO2
	MOV AL, THREE
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_4:
	MOV DX, IO2
	MOV AL, FOUR
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_5:
	MOV DX, IO2
	MOV AL, FIVE
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_6:
	MOV DX, IO2
	MOV AL, SIX
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_7:
	MOV DX, IO2
	MOV AL, SEVEN
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_8:
	MOV DX, IO2
	MOV AL, EIGHT
	OUT DX, AL
	JMP SEG_DEZ_SHOW
MIN_UNI_9:
	MOV DX, IO2
	MOV AL, NINE
	OUT DX, AL
	JMP SEG_DEZ_SHOW

;MOSTRANDO DÍGITOS DA DEZENA DOS MINUTOS 0-6
MIN_DEZ_0:
	MOV DX, IO3
	MOV AL, ZERO
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_1:
	MOV DX, IO3
	MOV AL, ONE
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_2:
	MOV DX, IO3
	MOV AL, TWO
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_3:
	MOV DX, IO3
	MOV AL, THREE
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_4:
	MOV DX, IO3
	MOV AL, FOUR
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_5:
	MOV DX, IO3
	MOV AL, FIVE
	OUT DX, AL
	JMP MIN_UNI_SHOW
MIN_DEZ_6:
	MOV DX, IO3
	MOV AL, SIX
	OUT DX, AL
	JMP MIN_UNI_SHOW

;MOSTRANDO DÍGITOS DA UNIDADE DAS HORAS 0-9 
HOR_UNI_0:
	MOV DX, IO4
	MOV AL, ZERO
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_1:
	MOV DX, IO4
	MOV AL, ONE
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_2:
	MOV DX, IO4
	MOV AL, TWO
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_3:
	MOV DX, IO4
	MOV AL, THREE
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_4:
	MOV DX, IO4
	MOV AL, FOUR
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_5:
	MOV DX, IO4
	MOV AL, FIVE
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_6:
	MOV DX, IO4
	MOV AL, SIX
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_7:
	MOV DX, IO4
	MOV AL, SEVEN
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_8:
	MOV DX, IO4
	MOV AL, EIGHT
	OUT DX, AL
	JMP MIN_DEZ_SHOW
HOR_UNI_9:
	MOV DX, IO4
	MOV AL, NINE
	OUT DX, AL
        JMP MIN_DEZ_SHOW   

;MOSTRANDO DÍGITOS DA DEZENA DAS HORAS 0-6
HOR_DEZ_0:
	MOV DX, IO5
	MOV AL, ZERO
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_1:
	MOV DX, IO5
	MOV AL, ONE
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_2:
	MOV DX, IO5
	MOV AL, TWO
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_3:
	MOV DX, IO5
	MOV AL, THREE
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_4:
	MOV DX, IO5
	MOV AL, FOUR
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_5:
	MOV DX, IO5
	MOV AL, FIVE
	OUT DX, AL
	JMP HOR_UNI_SHOW
HOR_DEZ_6:
	MOV DX, IO5
	MOV AL, SIX
	OUT DX, AL
	JMP HOR_UNI_SHOW  
	JMP INICIO

INICIALIZA_8251:                                     
	MOV AL,0
	MOV DX, ADR_USART_CMD
	OUT DX,AL
	OUT DX,AL
	OUT DX,AL
	MOV AL,40H
	OUT DX,AL
	MOV AL,4DH
	OUT DX,AL
	MOV AL,37H
	OUT DX,AL
	RET

RECEBE_CARACTER:
	PUSHF
	PUSH DX
AGUARDA_CARACTER:
	MOV DX, ADR_USART_STAT
	IN  AL,DX
	TEST AL,2
	JZ AGUARDA_CARACTER
	MOV DX, ADR_USART_DATA
	IN AL,DX
	SHR AL,1
NAO_RECEBIDO:
	POP DX
	POPF
	RET

MANDA_CARACTER:
	PUSHF
	PUSH DX
	PUSH AX  ; SALVA AL   
BUSY:
	MOV DX, ADR_USART_STAT
	IN  AL,DX
	TEST AL,1
	JZ BUSY
	MOV DX, ADR_USART_DATA
	POP AX 
	OUT DX,AL
	POP DX
	POPF
	RET 
    
.STARTUP
	MOV AX,0000
	MOV DS,AX
	
	MOV WORD PTR PONTEIRO_TRATADOR_INTERRUPCAO, OFFSET INTERRUPT_ONE_SECOND
	MOV WORD PTR PONTEIRO_TRATADOR_INTERRUPCAO + 2, SEG INTERRUPT_ONE_SECOND 
	MOV AX,@DATA
	MOV DS,AX
	MOV AX,@STACK
	
	MOV SS,AX
	CALL INICIALIZA_8251 
	LEA BX, MSG_INI
	LEA BX, MSG_DESP
	CALL ZERA
	

PROCURA_0:
	MOV AL, [BX]
	CMP AL, 0
	JE ECOAR
	CALL MANDA_CARACTER
	INC BX
	JMP PROCURA_0

ECOAR:
	CALL RECEBE_CARACTER
	CALL MANDA_CARACTER
	JMP ECOAR

INTERRUPT_ONE_SECOND:
	PUSHF 
	PUSH AX
	PUSH DX
	
	CMP HOR_DEZ,32H
        JNE CONTINUA
        CMP HOR_UNI,34H
        JE ZERA_HOR_DEZ
        CONTINUA:
        CMP HOR_UNI,39H
        JE ZERA_HOR_UNI
        CMP MIN_DEZ,36H
        JE ZERA_MIN_DEZ
        CMP MIN_UNI,39H
        JE ZERA_MIN_UNI
        CMP SEG_DEZ,36H
        JE ZERA_SEG_DEZ
        CMP SEG_UNI,39H
        JE ZERA_SEG_UNI
	
	INC SEG_UNI
	JMP SEG_UNI_SHOW
	 
	POP DX
	POP AX
	POPF
	IRET

;MEUS DADOS
.DATA
    SEG_UNI DB 30h
    SEG_DEZ DB 30h
    MIN_UNI DB 30h
    MIN_DEZ DB 30h
    HOR_UNI DB 30h
    HOR_DEZ DB 30h
    
    MSG_INI  DB "DIGITE O HORARIO INICIAL",13,10,0
    MSG_DESP DB "DIGITE O HORARIO PARA O DESPERTADOR",13,10,0

    SEG_UNI_DES DB 00h
    SEG_DEZ_DES DB 00h
    MIN_UNI_DES DB 00h
    MIN_DEZ_DES DB 00h
    HOR_UNI_DES DB 00h
    HOR_DEZ_DES DB 00h
    
;MILHA PILHA
.STACK
MINHA_PILHA DW 128 DUP(0) 

END